# Generated code. Do not modify.

require File.expand_path(File.dirname(__FILE__) + '/../command_base')
require File.expand_path(File.dirname(__FILE__) + '/../default_path_validator')
require File.expand_path(File.dirname(__FILE__) + '/../underlying_builder')

module FluentCommandBuilder
  def <%= model[:version_factory_method_signature] %>
    <%= model[:create_method_call] %> { |b| yield b if block_given? }
  end
  module <%= model[:command_module_name] %>
    module <%= model[:version_module_name] %>
      VERSION = '<%= model[:version] %>'
      def self.exact_version
        @exact_version ||= VERSION
      end
      def self.exact_version=(value)
        @exact_version = value
      end
      def self.default_path
        @default_path ||= nil
      end
      def self.default_path=(value)
        validator = DefaultPathValidator.new value, FluentCommandBuilder::<%= model[:command_module_name] %>::COMMAND_NAME, exact_version
        validator.validate
        @default_path = value
      end
      def <%= model[:create_method_signature] %>
        b = UnderlyingBuilder.new FluentCommandBuilder::<%= model[:command_module_name] %>::COMMAND_NAME, self.exact_version
        b.path = self.default_path
        b.actual_version_lambda = lambda { |path| FluentCommandBuilder::<%= model[:command_module_name] %>.version path }
        c = <%= model[:command_initializer_call] %>
        yield b if block_given?
        c
      end
      def <%= model[:command_factory_method_signature] %>
        <%= model[:create_method_call] %> { |b| yield b if block_given? }
      end
<%= model[:command_class] %>
    end
  end
end