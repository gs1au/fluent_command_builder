2010
tf
    add <itemSpec>
        /lock:<lockType>
        /type:<fileType>
        /noPrompt
        /recursive
        /login:<username>[,<password>]
    branch <oldItem> <newItem>
        /version:<versionSpec>
        /noGet
        /lock:<lockType>
        /noPrompt
        /silent
        /checkin
        /comment:<comment>
        /author:<authorName>
        /login:<username>[,<password>]
    branches <itemSpec>
        /version:<versionSpec>
        /collection:<teamProjectCollectionUrl>
        /login:<username>[,<password>]
    changeset[ <changesetNumber>]
        /comment:<comment>
        /notes:<notes=;>
        /noPrompt
        /collection:<teamProjectCollectionUrl>
        /latest
        /login:<username>[,<password>]
    checkin[ <itemSpec>]
        /author:<authorName>
        /comment:<comment>
        /noPrompt
        /notes:<notes=;>
        /override:<reason>
        /recursive
        /saved
        /validate
        /bypass
        /login:<username>[,<password>]
        /force
    checkin /shelveset:<shelvesetName>[;<shelvesetOwner>] (checkinShelveset)
        /bypass
        /noPrompt
        /login:<username>[,<password>]
        /collection:<teamProjectCollectionUrl>
        /author:<authorName>
        /force
    checkout[ <itemSpec>]
        /lock:<lockType>
        /recursive
        /type:<encoding>
        /login:<username>[,<password>]
    configure[ <pathOfTeamProject>]
        /collection:<teamProjectCollectionUrl>
        /login:<username>[,<password>]
    delete <itemSpec>
        /lock:<lockType>
        /recursive
        /login:<username>[,<password>]
    destroy <itemSpec>
        /keepHistory
        /stopAt:<versionSpec>
        /preview
        /startCleanup
        /noPrompt
        /silent
        /login:<username>[,<password>]
        /collection:<teamProjectCollectionUrl>
    difference <itemSpec> (compareWithCurrentWorkspaceVersion)
        /version:<versionSpec>
        /type:<fileType>
        /format:<format>
        /ignoreSpace
        /ignoreEol
        /ignoreCase
        /recursive
        /options
        /noPrompt
        /login:<username>[,<password>]
    difference <itemSpec> <itemSpec2> (compare)
        /type:<fileType>
        /format:<format>
        /ignoreSpace
        /ignoreEol
        /ignoreCase
        /recursive
        /options
        /noPrompt
        /login:<username>[,<password>]
    difference <shelvesetItemSpec> (compareWithShelvesetVersion)
        /shelveset:<shelvesetName>[;<shelvesetOwner>]
        /type:<fileType>
        /format:<format>
        /ignoreSpace
        /ignoreEol
        /ignoreCase
        /recursive
        /options
        /noPrompt
        /login:<username>[,<password>]
    difference /configure (configureCompareTool)
    dir <itemSpec>
        /version:<versionSpec>
        /recursive
        /folders
        /deleted
        /login:<username>[,<password>]
        /collection:<teamProjectCollectionUrl>
    folderDiff[ <sourcePath>] <targetPath>
        /recursive
        /noPrompt
        /collection:<teamProjectCollectionUrl>
        /filter:<filter;>
        /filterLocalPathsOnly
        /login:<username>[,<password>]
        /view:<view,>
    get[ <itemSpec>]
        /version:<versionSpec>
        /all
        /overwrite
        /force
        /preview
        /recursive
        /remap
        /noPrompt
        /login:<username>[,<password>]
    help[ <commandName>]
    history <itemSpec>
        /version:<versionSpec>
        /stopAfter:<number>
        /recursive
        /user:<userName>
        /format:<format>
        /slotMode
        /itemMode
        /noPrompt
        /login:<username>[,<password>]
        /sort:<sort>
        /collection:<teamProjectCollectionUrl>
    label <labelName>[@<scope>] <itemSpec>
        /owner:<ownerName>
        /version:<versionSpec>
        /comment:<comment>
        /child:<lockType>
        /recursive
        /login:<username>[,<password>]
        /collection:<teamProjectCollectionUrl>
    label /delete <labelName>[@<scope>] <itemSpec> (deleteLabel)
        /login:<username>[,<password>]
        /collection:<teamProjectCollectionUrl>
    labels[ <labelName>]
        /owner:<ownerName>
        /format:<format>
        /collection:<teamProjectCollectionUrl>
        /login:<username>[,<password>]
    localVersions <itemSpec>
        /recursive
        /format:<format>
        /workspace:<workspaceName>[;<workspaceOwner>]
        /collection:<teamProjectCollectionUrl>
    lock <itemSpec>
        /lock:<lockType>
        /workspace:<workspaceName>[;<workspaceOwner>]
        /recursive
        /login:<username>[,<password>]
        /collection:<teamProjectCollectionUrl>
    merge <source> <destination>
        /recursive
        /force
        /candidate
        /discard
        /version:<versionSpec>
        /lock:<lockType>
        /preview
        /baseless
        /noSummary
        /noImplicitBaseless
        /conservative
        /format:<format>
        /noPrompt
        /login:<username>[,<password>]
    merges[ <source>] <destination>
        /recursive
        /extended
        /format:<format>
        /login:<username>[,<password>]
        /showAll
        /collection:<teamProjectCollectionUrl>
    msdn[ <commandName>]
    permission <itemSpec>
        /allow:<permission,>
        /deny:<permission,>
        /remove:<permission,>
        /inherit:<inherit>
        /user:<userName,>
        /group:<groupName,>
        /collection:<teamProjectCollectionUrl>
        /recursive
        /global
        /login:<username>[,<password>]
    properties <itemSpec>
        /collection:<teamProjectCollectionUrl>
        /recursive
        /login:<username>[,<password>]
        /version:<versionSpec>
        /workspace:<workspaceName>[;<workspaceOwner>]
    proxy /configure <url> (configureProxy)
        /collection:<teamProjectCollectionUrl>
        /login:<username>[,<password>]
    proxy /add <url> (addProxyRecord)
        /name:<name>
        /site:<siteName>
        /description:<description>
        /default:<scope>
        /collection:<teamProjectCollectionUrl>
        /login:<username>[,<password>]
    proxy /delete <url> (deleteProxyRecord)
        /collection:<teamProjectCollectionUrl>
        /login:<username>[,<password>]
    proxy /list <url > (listProxyRecords)
        /collection:<teamProjectCollectionUrl>
        /login:<username>[,<password>]
    proxy /enabled:true (enableProxy)
    proxy /enabled:false (disableProxy)
    rename <oldItem> <newItem>
        /lock:<lockType>
        /login:<username>[,<password>]
    resolve[ <itemSpec>]
        /auto:<resolution>
        /preview
        /overrideType:<overrideType>
        /convertToType:<convertType>
        /recursive
        /newName:<path>
        /noPrompt
        /login:<username>[,<password>]
    rollback /toVersion:<versionSpec> <itemSpec> (rollbackToVersion)
        /recursive
        /lock:<lockType>
        /version:<versionSpec>
        /keepMergeHistory
        /login:<username>[,<password>]
        /noPrompt
    rollback /changeset:<changesetFrom>[~<changesetTo>][ <itemSpec>] (rollbackChangeset)
        /recursive
        /lock:<lockType>
        /version:<versionSpec>
        /keepMergeHistory
        /login:<username>[,<password>]
        /noPrompt
    shelve /replace <shelvesetName> (replaceShelveset)
        /comment:<comment>
        /validate
        /noPrompt
        /login:<username>[,<password>]
    shelve <shelvesetName> <itemSpec>
        /move
        /replace
        /comment:<comment>
        /recursive
        /validate
        /noPrompt
        /login:<username>[,<password>]
    shelve /delete <shelvesetName>[;<shelvesetOwner>] (deleteShelveset)
        /login:<username>[,<password>]
        /collection:<teamProjectCollectionUrl>
    shelvesets[ <shelvesetName>]
        /owner:<ownerName>
        /format:<format>
        /collection:<teamProjectCollectionUrl>
        /login:<username>[,<password>]
    status <itemSpec>
        /collection:<teamProjectCollectionUrl>
        /login:<username>[,<password>]
        /workspace:<workspaceName>[;<workspaceOwner>]
        /shelveset:<shelvesetName>[;<shelvesetOwner>]
        /format:<format>
        /recursive
        /user:<userName>
    undelete <itemSpec>[;<deletionId>]
        /noGet
        /lock:<lockType>
        /recursive
        /login:<username>[,<password>]
    undo <itemSpec>
        /workspace:<workspaceName>[;<workspaceOwner>]
        /recursive
        /noPrompt
        /login:<username>[,<password>]
        /collection:<teamProjectCollectionUrl>
    unlabel <labelName> <itemSpec>
        /collection:<teamProjectCollectionUrl>
        /recursive
        /login:<username>[,<password>]
    unshelve[ <shelvesetName>][;<username>][ <itemSpec>]
        /move
        /recursive
        /noPrompt
        /login:<username>[,<password>]
    view <itemSpec>
        /collection:<teamProjectCollectionUrl>
        /console
        /recursive
        /output:<localFile>
        /shelveset:<shelvesetName>[;<shelvesetOwner>]
        /noPrompt
        /version:<versionSpec>
        /login:<username>[,<password>]
    workfold <localFolder> (showLocalFolderMapping)
        /login:<username>[,<password>]
    workfold /workspace:<workspaceName> (showWorkspaceMappings)
        /login:<username>[,<password>]
    workfold <serverFolder> (showServerFolderMappings)
        /login:<username>[,<password>]
        /workspace:<workspaceName>[;<workspaceOwner>]
        /collection:<teamProjectCollectionUrl>
    workfold /map <serverFolder> <localFolder> (mapFolder)
        /login:<username>[,<password>]
        /workspace:<workspaceName>[;<workspaceOwner>]
        /collection:<teamProjectCollectionUrl>
    workfold /unmap (unmapFolder)
        /login:<username>[,<password>]
        /workspace:<workspaceName>[;<workspaceOwner>]
        /collection:<teamProjectCollectionUrl>
        /recursive
    workfold /cloak <serverFolder> (cloakFolder)
        /login:<username>[,<password>]
        /workspace:<workspaceName>[;<workspaceOwner>]
        /collection:<teamProjectCollectionUrl>
    workfold /decloak <serverFolder> (decloakFolder)
        /login:<username>[,<password>]
        /workspace:<workspaceName>[;<workspaceOwner>]
        /collection:<teamProjectCollectionUrl>
    workspace /new <workspaceName>[;<workspaceOwner>] (createWorkspace)
        /noPrompt
        /template:<workspaceName>[;<workspaceOwner>]
        /computer:<computerName>
        /comment:<comment>
        /collection:<teamProjectCollectionUrl>
        /permission:<permission>
        /login:<username>[,<password>]
    workspace /delete <workspaceName>[;<workspaceOwner>] (deleteWorkspace)
        /collection:<teamProjectCollectionUrl>
        /login:<username>[,<password>]
    workspace [<workspaceName>][;<workspaceOwner>] (modifyWorkspace)
        /computer:<computerName>
        /comment:<comment>
        /collection:<teamProjectCollectionUrl>
        /permission:<permission>
        /login:<username>[,<password>]
        /newName:<workspaceName>
        /newOwner:<ownerName>
    workspaces[ <workspaceName>]
        /owner:<ownerName>
        /computer:<computerName>
        /collection:<teamProjectCollectionUrl>
        /format:<format>
        /updateUserName:<oldUserName>
        /updateComputerName:<oldComputerName>
        /login:<username>[,<password>]
    workspaces /remove:<workspaceName,> (removeWorkspace)
        /collection:<teamProjectCollectionUrl>